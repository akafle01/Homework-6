import tensorflow as tf
from tensorflow.keras import datasets, layers, models
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Flatten

# Load and preprocess the CIFAR-10 dataset
(train_images, train_labels), (test_images, test_labels) = datasets.cifar10.load_data()
train_images, test_images = train_images / 255.0, test_images / 255.0

# Build the Fully Connected Neural Network
model = Sequential()
model.add(Flatten(input_shape=(32, 32, 3)))  # Flatten the 32x32x3 image to a vector
model.add(Dense(512, activation='relu'))  # Hidden layer with 512 units
model.add(Dense(10, activation='softmax'))  # Output layer with 10 units for the 10 classes

# Compile the model
model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

# Train the model
import time
start_time = time.time()

history = model.fit(train_images, train_labels, epochs=10, validation_data=(test_images, test_labels))

training_time = time.time() - start_time

# Evaluate the model on the test set
test_loss, test_acc = model.evaluate(test_images, test_labels)

# Print results
print(f'Training Time: {training_time} seconds')
print(f'Training Loss: {history.history["loss"][-1]}')
print(f'Test Accuracy: {test_acc}')
